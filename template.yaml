AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Diablo 2 Holy Grail Server

Globals:
    Function:
        Timeout: 30
        Runtime: nodejs22.x
        Environment:
            Variables:
                NODE_ENV: production

Parameters:
    Environment:
        Type: String
        Default: dev
        AllowedValues: [dev, prod]

Resources:
    # API Gateway with Rate Limiting
    ServerlessRestApi:
        Type: AWS::Serverless::Api
        Properties:
            StageName: Prod
            ThrottleConfig:
                RateLimit: 100 # 100 requests per second
                BurstLimit: 200 # 200 burst capacity

    # Lambda Function
    HolyGrailApi:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: dist/
            Handler: lambda.handler
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /{proxy+}
                        Method: ANY
                        RestApiId: !Ref ServerlessRestApi
                RootEvent:
                    Type: Api
                    Properties:
                        Path: /
                        Method: ANY
                        RestApiId: !Ref ServerlessRestApi
            Environment:
                Variables:
                    DATABASE_URL: !Sub
                        - "postgresql://neondb_owner:${password}@ep-square-forest-a71t907c-pooler.ap-southeast-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
                        - password: !Sub "{{resolve:ssm:/holy-grail/${Environment}/db-password}}"
                    CLIENT_URL: "https://holy-grail.chuggs.net"
                    BASE_URL: !Sub "{{resolve:ssm:/holy-grail/${Environment}/base-url}}"
                    GOOGLE_CLIENT_ID: !Sub "{{resolve:ssm:/holy-grail/${Environment}/google-client-id}}"
                    GOOGLE_CLIENT_SECRET: !Sub "{{resolve:ssm:/holy-grail/${Environment}/google-client-secret}}"
                    DISCORD_CLIENT_ID: !Sub "{{resolve:ssm:/holy-grail/${Environment}/discord-client-id}}"
                    DISCORD_CLIENT_SECRET: !Sub "{{resolve:ssm:/holy-grail/${Environment}/discord-client-secret}}"

    # Custom Cache Policy for API endpoints with query parameters
    ApiCachePolicy:
        Type: AWS::CloudFront::CachePolicy
        Properties:
            CachePolicyConfig:
                Name: !Sub "${AWS::StackName}-api-cache-policy"
                Comment: "Cache policy for API endpoints that need query parameters"
                DefaultTTL: 86400 # 24 hours
                MaxTTL: 604800 # 7 days
                MinTTL: 0
                ParametersInCacheKeyAndForwardedToOrigin:
                    EnableAcceptEncodingGzip: true
                    EnableAcceptEncodingBrotli: true
                    QueryStringsConfig:
                        QueryStringBehavior: all # Forward all query parameters
                    HeadersConfig:
                        HeaderBehavior: whitelist
                        Headers:
                            - Authorization
                            - CloudFront-Forwarded-Proto
                    CookiesConfig:
                        CookieBehavior: all # Forward cookies for auth

    # CloudFront Distribution
    CloudFrontDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Aliases:
                    - holy-grail-api.chuggs.net
                Origins:
                    - Id: ApiGatewayOrigin
                      DomainName: !Sub "${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com"
                      OriginPath: /Prod
                      CustomOriginConfig:
                          HTTPPort: 443
                          OriginProtocolPolicy: https-only
                          OriginSSLProtocols:
                              - TLSv1.2
                DefaultCacheBehavior:
                    TargetOriginId: ApiGatewayOrigin
                    ViewerProtocolPolicy: redirect-to-https
                    CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
                    OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
                    ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03 # SecurityHeaders
                CacheBehaviors:
                    # Cache static endpoints with query parameters
                    - PathPattern: "/items*"
                      TargetOriginId: ApiGatewayOrigin
                      ViewerProtocolPolicy: redirect-to-https
                      CachePolicyId: !Ref ApiCachePolicy
                      OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
                      ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
                    - PathPattern: "/runewords*"
                      TargetOriginId: ApiGatewayOrigin
                      ViewerProtocolPolicy: redirect-to-https
                      CachePolicyId: !Ref ApiCachePolicy
                      OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
                      ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
                    # Don't cache auth endpoints
                    - PathPattern: "/auth*"
                      TargetOriginId: ApiGatewayOrigin
                      ViewerProtocolPolicy: redirect-to-https
                      CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
                      OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac # AllViewerExceptHostHeader
                      ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
                      AllowedMethods: [GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE]
                      CachedMethods: [GET, HEAD, OPTIONS]
                    # Don't cache user-specific endpoints
                    - PathPattern: "/user-items*"
                      TargetOriginId: ApiGatewayOrigin
                      ViewerProtocolPolicy: redirect-to-https
                      CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
                      OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac # AllViewerExceptHostHeader
                      ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
                      AllowedMethods: [GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE]
                      CachedMethods: [GET, HEAD, OPTIONS]

                ViewerCertificate:
                    AcmCertificateArn: arn:aws:acm:us-east-1:930951674511:certificate/25fc7744-ca3f-4d39-a39e-7b74f5968bf4
                    SslSupportMethod: sni-only
                    MinimumProtocolVersion: TLSv1.2_2021
                Enabled: true
                Comment: !Sub "${AWS::StackName} API Distribution"
                PriceClass: PriceClass_200 # North America, Europe, Asia, Middle East, Africa (includes Sydney)

Outputs:
    ApiUrl:
        Description: API Gateway endpoint URL
        Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    CloudFrontUrl:
        Description: CloudFront distribution URL
        Value: !Sub "https://${CloudFrontDistribution.DomainName}"
    CustomDomainUrl:
        Description: Custom domain URL
        Value: "https://holy-grail-api.chuggs.net"
